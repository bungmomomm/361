@function map-deep-get($map, $keys...) {
	@each $key in $keys {
		$map: map-get($map, $key);
	}
	@return $map;
}

@function rem($px-values, $font-size: $base-font-size) {
	// Create an empty list that we can dump values into
	$rem-values: ();
	@each $value in $px-values {
		// Check to see if value is 0, auto, or inherited
		// If so, do nothing and output value
		@if $value==0 or $value==auto or $value==inherit {
			$rem-values: append($rem-values, $value);
			// If the value is a pixel, convert to em value
		}
		@else if unit($value)=='px' {
			$rem-values: append($rem-values, #{($value/$font-size)}rem);
			// For everything else, keep as is
		}
		@else {
			$rem-values: append($rem-values, $value);
		}
	}
	@return $rem-values;
}

@mixin font-face-woff2($name, $path, $filename: $name, $weight: normal, $style: normal) {

	@font-face {
		font-family: $name;
		font-weight: $weight;
		font-style: $style;
		src:
			url('#{$path}/#{$filename}/#{$filename}.woff2') format('woff2'),
			url('#{$path}/#{$filename}/#{$filename}.woff') format('woff');
	}
}

@mixin font-face($prefix, $path: '../assets/fonts/') {

	@font-face {
		font-family: $prefix;
		font-weight: normal;
		font-style: normal;
		src: url($path + $prefix + '/' + $prefix + '.eot');
		src:
			url($path + $prefix + '/' + $prefix + '.woff2') format('woff2'),
			url($path + $prefix + '/' + $prefix + '.woff') format('woff'),
			url($path + $prefix + '/' + $prefix + '.ttf') format('truetype'),
			url($path + $prefix + '/' + $prefix + '.svg#' + str-replace($prefix, '-', '')) format('svg');
	}
}

@mixin map-to-style($object) {
	@each $property, $value in $object {
		#{$property}: $value;
	}
}

@mixin font($weight) {
	@include map-to-style(map-deep-get($typography, font-family, $weight));
}

@function color($name, $child: 'base') {
	@return map-deep-get($color, $name, $child);
}

@function border($name, $child: 'base') {
	@return map-deep-get($border, $name, $child);
}
